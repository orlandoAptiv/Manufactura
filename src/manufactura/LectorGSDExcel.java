package manufactura;

import Clases.DatosGSD;
import Reportes.ExcelImportGSD;
import java.awt.Image;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

public class LectorGSDExcel extends javax.swing.JFrame {

    /**
     * Creates new form LectorGSDExcel
     */
    ExcelImportGSD Eimport;
    Processbar barra;

    public LectorGSDExcel() {
        initComponents();
        this.setLocationRelativeTo(null);
        //jFileChooser1.se
        Eimport = new ExcelImportGSD("");
        barra = new Processbar();
        Image icon = new ImageIcon(getClass().getResource("/Images/competitors-icon.png")).getImage();
        setIconImage(icon);
        FileNameExtensionFilter filtro = new FileNameExtensionFilter("Excel 97-2003, Excel 2007/2010", "csv", "xlsx", "xls");
        jFileChooser1.setFileFilter(filtro);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jFileChooser1 = new javax.swing.JFileChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtTexto = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 204));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(51, 51, 255));
        jLabel6.setText("Cargar Ponderados de GCSD desde Excel");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 870, 70));

        jFileChooser1.setApproveButtonText("IMPORTAR");
        jFileChooser1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFileChooser1ActionPerformed(evt);
            }
        });
        jPanel1.add(jFileChooser1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 90, 750, 330));

        txtTexto.setColumns(20);
        txtTexto.setRows(5);
        jScrollPane1.setViewportView(txtTexto);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 420, 750, 200));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1008, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 637, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jFileChooser1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFileChooser1ActionPerformed
        // TODO add your handling code here:
        if (evt.getActionCommand().equals("CancelSelection"))
            this.dispose();
        else {
            if (jFileChooser1.getSelectedFile() != null) {
                Thread t = new Thread(new Runnable() {

                    @Override
                    public void run() {
                        threadImportar(jFileChooser1.getSelectedFile().getPath());
                    }
                });
                barra.setVisible(true);
                t.start();

            }
        }
    }//GEN-LAST:event_jFileChooser1ActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
        Principal p = new Principal(Principal.UsuarioLogeado);
        p.setLocationRelativeTo(null);
        p.setVisible(true);
    }//GEN-LAST:event_formWindowClosed

    public void threadImportar(String Ruta) {
        try {

            String Cadena = "";
            String Hoja = Eimport.getLibroCorrecto(Ruta);
            switch (Hoja) {
                case "CADENA 1":
                    Cadena = "1";
                    break;
                case "CADENA 2":
                    Cadena = "2";
                    break;
                case "CADENA 3":
                    Cadena = "3";
                    break;
                case "CADENA 6":
                    Cadena = "6";
                    break;
            }
            Eimport = new ExcelImportGSD(Cadena);
            if (Hoja.isEmpty()) {
                JOptionPane.showMessageDialog(null, "El archivo seleccionado es incorrecto, vuelva a intentarlo", "Error", JOptionPane.INFORMATION_MESSAGE);
            } else {
                Eimport.lecturaArchivoXLS(jFileChooser1.getSelectedFile().toString(), Hoja);
            }
            for (DatosGSD d : ExcelImportGSD.listadatosGSD) {
                ArrayList<String> lista = new ArrayList<String>();
                lista.add(d.HCDIRCORTE);
                lista.add(d.HCDIRLPS);
                lista.add(d.HCDIRENSFINAL);
                lista.add(Principal.UsuarioLogeado.codigo);
                lista.add(d.Codigo.Idcodigo);
                Principal.cn.EjecutarInsert("update gsd set  hcdircorte=?, hcdirlps=?, hcdirensfinal=?,  usuariomodif=?  where gsd.idcodigo=?", lista);
                txtTexto.setText(txtTexto.getText() + d.Codigo.Codigo + d.Codigo.Linea + d.Codigo.Turno + "    valor:" + d.HCDIRCORTE + "," + d.HCDIRLPS + "," + d.HCDIRENSFINAL + "\n");

            }
            ArrayList<Object> listas = new ArrayList<Object>();
            Principal.cn.EjecutarInsertOb("update manufactura as a\n"
                    + "INNER JOIN gsd as b on\n"
                    + "    a.idcodigo = b.idcodigo\n"
                    + "set \n"
                    + "    a.PUNTOSPZAPOND = b.hcdirlps+b.hcdirensfinal", listas);
        } catch (Exception e) {
            System.out.println(e.toString());
        }
        barra.dispose();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LectorGSDExcel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LectorGSDExcel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LectorGSDExcel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LectorGSDExcel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LectorGSDExcel().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea txtTexto;
    // End of variables declaration//GEN-END:variables
}
